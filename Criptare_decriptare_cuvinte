from art import *
alphabet = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u',
            'v', 'w', 'x', 'y', 'z', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p',
            'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']


def caesar(start_text, shift_amount, cipher_direction):
    end_text = ""
    if cipher_direction == "decode":
        shift_amount *= -1
    for char in start_text:
        if char in alphabet:
            position = alphabet.index(char)
            new_position = position + shift_amount
            end_text += alphabet[new_position]
        else:
            end_text+=char

    print(f"Here's the {cipher_direction}d result: {end_text}")



tprint("caesar cipher", "rnd-xlarge")
restart='True'
while restart=='True':
    direction = input("Type 'encode' to encrypt, type 'decode' to decrypt:\n")
    text = input("Type your message:\n").lower()
    shift = int(input("Type the shift number:\n"))

# TODO-2: What if the user enters a shift that is greater than the number of letters in the alphabet?
# Try running the program and entering a shift number of 45.
# Add some code so that the program continues to work even if the user enters a shift number greater than 26.

    shift=shift%26
    #Alfabetul englez are 26 de litere. Dacă un utilizator introduce un shift mai mare, cum ar fi 45, în esență înseamnă că literele
    # vor fi rotite de mai multe ori complet prin alfabet.De exemplu, un shift de 45 este echivalent cu un shift de 45 % 26 = 19.
    # Rotirea alfabetului cu 26 de poziții înseamnă că literele revin la pozițiile inițiale.


    caesar(start_text=text, shift_amount=shift, cipher_direction=direction)
    restart='False'
    user = str(input("Do you want to restart the cipher program?"))
    if user=='True':
        restart='True'
    else:
        print("This is the end of the game!")
